PROMPT ***************************** 1ERE *****************************
PROMPT
SELECT TITRE FROM SERIE;
PROMPT ***************************** 2eme *****************************
PROMPT
SELECT COUNT(COUNT(*)) NOMBRE FROM SERIE GROUP BY PAYS;
PROMPT ***************************** 3eme *****************************
PROMPT
SELECT TITRE FROM SERIE WHERE PAYS LIKE 'Japon' GROUP BY TITRE;
PROMPT ***************************** 4eme *****************************
PROMPT
 SELECT COUNT(*) NOMBRE,PAYS FROM SERIE GROUP BY PAYS;
 PROMPT ***************************** 5eme *****************************
 PROMPT
 SELECT COUNT(*) FROM SERIE WHERE ANNEE BETWEEN 2001 AND 2015;
 PROMPT ***************************** 6eme *****************************
 PROMPT
SELECT TITRE FROM G_SERIE G WHERE G.NOMG='Sience fiction' INTERSECT
(SELECT TITRE FROM G_SERIE G1 WHERE G1.NOMG='Comedie');

PROMPT ***************************** 7eme *****************************
PROMPT
SELECT TITRE,DATE_CREATION FROM PRODUCTEURS NATURAL JOIN SERIE WHERE
NOMP=' Steven ' AND PRENOMP='Spielberg ' ORDER BY DATE_CREATION DESC;
PROMPT ***************************** 8eme *****************************
PROMPT
 SELECT TITRE, COUNT(ID_SAISON) A FROM SERIE NATURAL JOIN SAISON WHERE
 PAYS='Etats-Unis' GROUP BY TITRE ORDER BY A;

 PROMPT ***************************** 9eme *****************************
 PROMPT
SELECT TITRE FROM EPISODE GROUP BY TITRE HAVING COUNT(TITRE) =
(SELECT MAX(COUNT(*)) FROM EPISODE GROUP BY TITRE );


PROMPT ***************************** 10eme *****************************
PROMPT
SELECT U.SEXE FROM UTILISATEURS U,NOTE_SER N WHERE U.PSEUDO=N.PSEUDO AND
N.TITRE= 'Big Bang Theory' GROUP BY U.SEXE HAVING(AVG(NOTE))>
ALL (SELECT AVG(NOTE) FROM NOTE_SER GROUP BY SEXE);



PROMPT ***************************** 11eme *****************************
PROMPT
SELECT TITRE,AVG(NOTE) FROM NOTE_SER GROUP BY NOTE,TITRE HAVING AVG(NOTE)<5;

PROMPT ***************************** 12eme *****************************
PROMPT
SELECT TITRE,N.COMMENTAIRE  FROM NOTE_SER N WHERE NOTE>= ALL(SELECT NOTE FROM NOTE_SER
  WHERE N.TITRE=NOTE_SER.TITRE) GROUP BY TITRE,COMMENTAIRE;

  PROMPT ***************************** 13eme *****************************
  PROMPT
SELECT S.TITRE FROM SERIE S, NOTE_EP N,EPISODE E  WHERE N.TITREEP=E.TITREEP AND
E.TITRE=S.TITRE GROUP BY S.TITRE HAVING(AVG(N.NOTE))>8;

PROMPT ***************************** 14eme *****************************
PROMPT
SELECT AVG(COUNT(TITREEP)) AS NB_MOYEN_EPISODE FROM ACTEURS  NATURAL JOIN
EPISODE NATURAL JOIN SAISON WHERE NOMP=' Bryan ' AND PRENOMP=' Cranston 'GROUP BY TITRE;


PROMPT ***************************** 15eme *****************************
PROMPT
SELECT A.NOMP,A.PRENOMP FROM ACTEURS A,REALISATEURS R WHERE A.NOMP=R.NOMP AND
A.PRENOMP=R.PRENOMP;

PROMPT ***************************** 16eme *****************************
PROMPT
CREATE OR REPLACE VIEW NB_EPIS AS SELECT TITRE,COUNT(TITREEP)"NB_EPIS" FROM SERIE FULL NATURAL JOIN EPISODE GROUP BY TITRE ORDER BY 1;
SELECT TITRE,NOMP,PRENOMP,COUNT(TITREEP)"EPIS_JOUER",NB_EPIS FROM SERIE NATURAL JOIN EPISODE NATURAL JOIN ACTEURS NATURAL JOIN PERSONNE NATURAL JOIN NB_EPIS
GROUP BY TITRE,NOMP,PRENOMP,NB_EPIS HAVING COUNT(TITREEP) >= NB_EPIS*0.8;


PROMPT ***************************** 17eme *****************************
PROMPT
SELECT DISTINCT A.NOMP,A.PRENOMP FROM ACTEURS A WHERE NOT EXISTS(SELECT * FROM
   EPISODE E WHERE E.TITRE='Breaking Bad' AND NOT EXISTS(SELECT * FROM ACTEURS
     AA WHERE A.NOMP=AA.NOMP AND A.PRENOMP=AA.PRENOMP AND E.TITREEP=AA.TITREEP));

PROMPT ***************************** 18eme *****************************
PROMPT
SELECT PSEUDO FROM NOTE_SER N GROUP BY PSEUDO HAVING COUNT(*)=
(SELECT MAX(COUNT(*)) FROM NOTE_SER GROUP BY PSEUDO);
PROMPT ***************************** 19eme *****************************
PROMPT
SELECT ID_COM,LEVEL FROM COMMEN START WITH ID_REPONSE IS NULL CONNECT BY PRIOR ID_COM=  ID_REPONSE;



PROMPT ***************************** 20eme *****************************
PROMPT
select DISTINCT  PSEUDO,(SELECT COUNT(*)  FROM COMMEN M JOIN COMMEN MM ON
M.ID_COM=MM.ID_REPONSE AND M.PSEUDO='Azrod95')"nb_reponse" FROM COMMEN WHERE PSEUDO='Azrod95';
